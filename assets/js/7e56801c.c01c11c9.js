(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{108:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),i=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),u=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=u(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,b=p["".concat(a,".").concat(m)]||p[m]||d[m]||o;return t?i.a.createElement(b,l(l({ref:n},s),{},{components:t})):i.a.createElement(b,l({ref:n},s))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=m;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,a[1]=l;for(var s=2;s<o;s++)a[s]=t[s];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},90:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return u}));var r=t(3),i=t(7),o=(t(0),t(108)),a={title:"Electron",slug:"/electron"},l={unversionedId:"StackTech/electron",id:"StackTech/electron",isDocsHomePage:!1,title:"Electron",description:"KEZAKO ?",source:"@site/docs/StackTech/electron.md",slug:"/electron",permalink:"/UnlabeledProject/docs/electron",editUrl:"https://github.com/batleforc/UnlabeledProject/edit/doc/docs/StackTech/electron.md",version:"current",sidebar:"docs",previous:{title:"Stach technique",permalink:"/UnlabeledProject/docs/stacktechnique"},next:{title:"Mise en place de l'environnement",permalink:"/UnlabeledProject/docs/setup"}},c=[{value:"Mise en place d&#39;un environnement de dev",id:"mise-en-place-dun-environnement-de-dev",children:[{value:"1. Installation des packages",id:"1-installation-des-packages",children:[]},{value:"2. Un peu de configuration",id:"2-un-peu-de-configuration",children:[]},{value:"3. Ajout des scripts",id:"3-ajout-des-scripts",children:[]},{value:"4. electron.js",id:"4-electronjs",children:[]},{value:"How It Work",id:"how-it-work",children:[]}]}],s={toc:c};function u(e){var n=e.components,t=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"KEZAKO ?"),Object(o.b)("p",null,"Cette partie d'atome est un framework permettant de d\xe9velopper des applications desktop multi-plateformes \xe0 partir de JavaScript/Html/CSS."),Object(o.b)("p",null,'Le processus de d\xe9veloppement est "Simple".'),Object(o.b)("h2",{id:"mise-en-place-dun-environnement-de-dev"},"Mise en place d'un environnement de dev"),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Pour la suite de cette page je pars du principe qu'on ajoute la stack electron sur un projet d\xe9j\xe0 existant, dans une autre doc j'explique la mise en place de mon environnement post electron."),Object(o.b)("p",{parentName:"div"},"L'environnement ",Object(o.b)("a",{parentName:"p",href:"/docs/setup"},"pr\xe9-electron est disponible ici")))),Object(o.b)("h3",{id:"1-installation-des-packages"},"1. Installation des packages"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-shell"},"  yarn add electron electron-builder wait-on concurrently electron-is-dev\n")),Object(o.b)("p",null,"Electron permet de lancer la solution sans construire (build) la solution compl\xe8te."),Object(o.b)("p",null,"Electron-Builder permet de compiler la solution."),Object(o.b)("p",null,"\"Wait-On\" permet d'attendre une r\xe9ponse d'une url sp\xe9cifique pour ici continuer le processus."),Object(o.b)("p",null,'"Concurrently" permet de lancer plusieures commandes aux m\xeame moment.'),Object(o.b)("h3",{id:"2-un-peu-de-configuration"},"2. Un peu de configuration"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  ... le reste de votre package.json\n  "main": "./build/electron.js",\n  "build": {\n    "productName": "unlabeledProject",\n    "appId": "com.example.unlabeledProject",\n    "icon": "build/toolbox.png",\n    "asar": true,\n    "files": [\n      "package.json",\n      "build/**/*",\n      "node_modules/**/*",\n      "BuildServer/**/*"\n    ]\n  },\n}\n')),Object(o.b)("p",null,"Toutes ces lignes sont-elles vraiment n\xe9cessaires ?"),Object(o.b)("p",null,"Dans notre cas oui, mais je suis l\xe0 pour vous les expliquer:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"main : L'emplacement de votre fichier electron.js, celui-ci est le point d'entr\xe9e de votre application (imaginez cliquer sur ce fichier quand vous lancer la solution finale ou uniquement en dev)"),Object(o.b)("li",{parentName:"ul"},"build:",Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},"productName : Le nom de votre produit (sera utilis\xe9 pour la compilation de votre ex\xe9cutable)"),Object(o.b)("li",{parentName:"ul"},"appId : Id Linux/Apple, cette id permet de reconna\xeetre le package."),Object(o.b)("li",{parentName:"ul"},"icon : L'icon utiliser pour vos ex\xe9cutables (penser \xe0 bien importer le dossier o\xf9 il est dans les fichiers)"),Object(o.b)("li",{parentName:"ul"},"asar : Si vous utilisez le format asar pour vos fichiers compress\xe9s. Th\xe9oriquement il acc\xe9l\xe8re les requires."),Object(o.b)("li",{parentName:"ul"},"files: Tous les fichiers/dossiers incluent dans le package finale, penser \xe0 include le node_modules, vos ou votre dossier(s) de source ainsi que votre icon (ici, build contient le client ainsi que l'icon)")))),Object(o.b)("h3",{id:"3-ajout-des-scripts"},"3. Ajout des scripts"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json",metastring:'title="package.json"',title:'"package.json"'},'{\n  ... le reste de votre package.json\n  "scripts":{\n    "start":"VOTRE SCRIPT DE STARTUP",\n    "build":"VOTRE SCRIPT DE BUILD",\n    "postinstall": "electron-builder install-app-deps",\n    "electronDev": "concurrently \\"yarn start\\" \\"wait-on http://localhost:3000 && electron .\\"",\n    "electronAlone":"electron .",\n    "ebuild": "yarn run build && node_modules/.bin/build",\n    "electron-pack": "build --em.main=build/electron.js",\n    "pack": "electron-builder --dir",\n    "dist": "electron-builder",\n    "distStartup":"yarn build && yarn dist"\n  }\n}\n')),Object(o.b)("p",null,"Pour le bon fonctionnement de la solution TOUS ces scripts sont n\xe9cessaires:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"postinstall : Est ex\xe9cut\xe9 apr\xe8s l'installation d'un package, il permet de reconstruire les extensions dans un format propice \xe0 l'utilisation electron."),Object(o.b)("li",{parentName:"ul"},"electronDev : Permet de lancer votre environnement de dev via start puis d'attendre que celui-ci soit lanc\xe9 pour lancer le client electron."),Object(o.b)("li",{parentName:"ul"},"electronAlone : Dans beaucoup de cas j'ai eu \xe0 modifier uniquement la partie electron, afin d'acc\xe9l\xe9rer les starts/restarts je lan\xe7ais une fois unique start puis relan\xe7ais uniquement la partie electron."),Object(o.b)("li",{parentName:"ul"},"pack : Permet d'obtenir uniquement le dossier contenant la solution compil\xe9e."),Object(o.b)("li",{parentName:"ul"},"dist : Permet via la configuration de l'\xe9tape 2 de compiler vos fichiers (par d\xe9fault .snap pour linux, .exe pour windows et .appImage pour mac)"),Object(o.b)("li",{parentName:"ul"},"distStartup : Permet en une commande de build les composants ainsi que le client electron.")),Object(o.b)("h3",{id:"4-electronjs"},"4. electron.js"),Object(o.b)("p",null,"Je vous fournis une version simplifi\xe9e de mon fichier electronJs les commentaires sont int\xe9gr\xe9s dans le code fournis, si vous souhaitez mettre en place un syst\xe8me plus complet avec un icon tray, veuillez vous en r\xe9f\xe9rer \xe0 mon code."),Object(o.b)("p",null,"Le code electron.js est plac\xe9 dans mon dossier public afin d'\xe9viter que celui ci sois modifi\xe9, ne comptez pas sur du TypeScript pour celui ci."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-js",metastring:'title="/public/electron.js"',title:'"/public/electron.js"'},'  const electron = require("electron");\n  const { app, BrowserWindow } = electron;\n  const isDev = require("electron-is-dev");\n  const Server = require(\'../BuildServer/index\') // permet de lancer le serveur aux d\xe9marrage\n  const path = require("path");\n  let mainWindow;\n  const BaseFolder = path.join(__dirname);\n  const icon = path.join(BaseFolder,"toolbox.png");\n\n  const createWindow = ({showOnLoad = true}={}) => {\n    if(mainWindow){\n      mainWindow.focus();\n      return;\n    }\n    mainWindow = new BrowserWindow({\n      width: 1280, // Permet de d\xe9finir la taille de la fen\xeatre\n      height: 720,\n      autoHideMenuBar : true, // Permet de cacher la barre de menu int\xe9grer a electron\n      icon : icon // L\'icon de la fen\xeatre \xe9lectron\n    });\n    mainWindow.loadURL(\n      isDev ?\n        "http://localhost:3000" : // Le serveur de dev local\n        "http://localhost:5000"   // Le serveur de production\n    )\n    mainWindow.once("ready-to-show",()=>{\n      if(showOnLoad) mainWindow.show(); //si on veux montrer la fen\xeatre aux d\xe9marrage\n    })\n    mainWindow.once("closed", () => (mainWindow = null)); // si la fen\xeatre est fermer on vide mainWindow\n  }\n\n  const init = () => {\n    app.on("window-all-closed", (e) => e.preventDefault()); // evite que toute la solution sois fermer si toute les fen\xeatre sont fermer.\n  };\n  app.requestSingleInstanceLock() ? init() : app.quit(); // Evite d\'avoir deux fois le serveur d\xe9marrer\n  app.on("second-instance", () => mainWindow.show()); // montre la fen\xeatre si la solution est d\xe9marrer deux fois\n\n  app.on("ready",()=>{\n    if (mainWindow === null) {\n      createWindow(); // si aucune fen\xeatre en cr\xe9er une.\n    }\n  })\n\n  app.on("activate", () => {\n    if (mainWindow === null) {\n      createWindow(); // si aucune fen\xeatre en cr\xe9er une.\n    }\n  });\n')),Object(o.b)("h3",{id:"how-it-work"},"How It Work"),Object(o.b)("img",{src:"https://www.plantuml.com/plantuml/png/TP2z2W8n48Hxds8u2wiJrCv24B4JBIp58iOz38QDv99J45_8r_35N7_kJkKiKkomtsHc0QM3yuWv-HR0RakOMjB1EyPPbBUs95zGzBKmiOOuo7oHzw2HndHKiqFqkZF5cc0LScTZC8vbzMs4TDNUMANtQu5UNe9CJmUN2q7GZWDn9EH11QF_WALMavtnmSXo5IFzskgNaSItAjHa_56Z8TEHDhz_F2ymnA2xY8KdH2PanBTha26PIuM24gWiCtgdfEh3xLdw3W00",alt:null}),Object(o.b)("p",null,"Lors du d\xe9marrage de notre solution notre electron va d\xe9marrer notre serveur web, celui ci int\xe8gre une partie statique qui n'est autre que notre client ainsi qu'une partie Api."),Object(o.b)("h4",{id:"pourquoi-electron-et-pas-react-native"},"Pourquoi Electron et pas React-Native"),Object(o.b)("p",null,"React native et Electron n'ont pas le m\xeame objectif."),Object(o.b)("p",null,"React native vise les appareille Android et Ios contrairement a Electron qui vise les Ordinateur."))}u.isMDXComponent=!0}}]);